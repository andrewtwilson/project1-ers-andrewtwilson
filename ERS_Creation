SET SCHEMA 'ers';

-- DROP TABLE ers_user_roles;
CREATE TABLE ers_user_roles (
	ers_user_role_id NUMERIC PRIMARY KEY,
	user_role VARCHAR(10) NOT NULL
);

INSERT INTO ers_user_roles (ers_user_role_id, user_role)
VALUES (1, 'EMPLOYEE'), (2, 'FINANCEMAN');

-- DROP TABLE ers_users;
CREATE TABLE ers_users (
	ers_users_id NUMERIC PRIMARY KEY,
	ers_username VARCHAR(50) UNIQUE NOT NULL,
	ers_password VARCHAR(50) NOT NULL,
	user_first_name VARCHAR(100) NOT NULL,
	user_last_name VARCHAR(100) NOT NULL,
	user_email VARCHAR(150) NOT NULL,
	user_role_id NUMERIC REFERENCES ers_user_roles (ers_user_role_id) NOT NULL
);

-- DROP TABLE ers_reimbursement_status;
CREATE TABLE ers_reimbursement_status (
	reimb_status_id NUMERIC PRIMARY KEY,
	reimb_status VARCHAR(10) NOT NULL
);

INSERT INTO ers_reimbursement_status (reimb_status_id, reimb_status)
VALUES (1, 'PENDING'), (2, 'APPROVED'), (3, 'DENIED');

-- DROP TABLE ers_reimbursement_type;
CREATE TABLE ers_reimbursement_type (
	reimb_type_id NUMERIC PRIMARY KEY,
	reimb_type VARCHAR(10) NOT NULL
);

INSERT INTO ers_reimbursement_type (reimb_type_id, reimb_type)
VALUES (1, 'LODGING'), (2, 'TRAVEL'), (3, 'FOOD'), (4, 'OTHER');

-- DROP TABLE ers_reimbursement;
CREATE TABLE ers_reimbursement (
	reimb_id NUMERIC PRIMARY KEY,
	reimb_amount NUMERIC NOT NULL CHECK (reimb_amount > 0),
	reimb_submitted TIMESTAMP NOT NULL,
	reimb_resolved TIMESTAMP,
	reimb_description VARCHAR(250),
-- 	reimb_receipt BLOB,
	reimb_author NUMERIC REFERENCES ers_users (ers_users_id) NOT NULL,
	reimb_resolver NUMERIC REFERENCES ers_users (ers_users_id),
	reimb_status_id NUMERIC REFERENCES ers_reimbursement_status (reimb_status_id) NOT NULL,
	reimb_type_id NUMERIC REFERENCES ers_reimbursement_type (reimb_type_id) NOT NULL
);